import{Q as F,a as S}from"./QBreadcrumbs.b48f041b.js";import{Q}from"./QPage.e8da9ae1.js";import{Q as P}from"./QForm.2b098fed.js";import{Q as $}from"./QSeparator.f4e84234.js";import{_ as b,aT as f,o as d,j as u,i as c,t as _,F as p,k as g,v as q,e as w,w as h,h as O,f as m,g as y,l as v,u as M,Q as T,aU as x,r as k}from"./index.3671a223.js";import{Q as V,d as E}from"./QDate.9457e75f.js";import{Q as Y}from"./QPopupProxy.b8fe0c28.js";import{C}from"./ClosePopup.32e36c56.js";import{Q as U}from"./QInput.36128974.js";import"./focus-manager.b507780d.js";import"./use-dark.dbbd0c9d.js";import"./use-form.820ebbed.js";import"./format.2bc25e5f.js";import"./QDialog.8d8d8cb6.js";import"./use-prevent-scroll.53dc6540.js";import"./scroll.624406d4.js";import"./use-timeout.26584f0c.js";import"./QMenu.2c83730c.js";import"./use-transition.1d5f554b.js";import"./use-key-composition.a7274795.js";import"./use-split-attrs.d467856c.js";import"./uid.42677368.js";const N={props:["selectedYear","selectedMonth","monthName","markedDates","selectedDates"],data(){const e=new Date().getFullYear();return new Date().getMonth(),{years:Array.from({length:21},(t,l)=>e-10+l),months:["January","February","March","April","May","June","July","August","September","October","November","December"],weekDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],calendar:[],formData:{},selectedDate:{}}},created(){},methods:{setSelectedDateValue(e){console.log(this.formData);let t={};for(const[l,s]of Object.entries(this.formData))t[l]=new Date(s);console.log("data: ",t),this.$emit("update:selectedDates",{...t})},updateCalendar(){const e=this.selectedYear,t=this.selectedMonth,l=new Date(e,t,1),s=new Date(e,t+1,0);let a=[],o=[];const i=l.getDay();if(i!==0){const r=new Date(e,t,0);for(let D=i-1;D>=0;D--)o.push({date:new Date(r.getFullYear(),r.getMonth(),r.getDate()-D),otherMonth:!0})}for(let r=1;r<=s.getDate();r++)o.length===7&&(a.push(o),o=[]),o.push({date:new Date(e,t,r),otherMonth:!1});const n=7-o.length;for(let r=1;r<=n;r++)o.push({date:new Date(e,t+1,r),otherMonth:!0});a.push(o),this.calendar=a},isMarked(e){return this.markedDates.some(t=>t.getFullYear()===e.getFullYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate())},isSelected(e){let t="";return{result:Object.entries(this.selectedDates).some(s=>(t=s[0],s[1].getFullYear()===e.getFullYear()&&s[1].getMonth()===e.getMonth()&&s[1].getDate()===e.getDate())),label:t}},setDateValue(){const{key:e,date:t}=this.selectedDate;console.log("setDateValue: ",this.selectedDate),f(t),this.$emit("update:selectDates",{...this.selectedDate})}},watch:{selectedDates:{handler(e){for(const[t,l]of Object.entries(this.selectedDates))this.formData[t]=f(l)},deep:!0}},mounted(){this.updateCalendar()}},j={class:"month-year-picker"},R={class:"calendar"},B={colspan:"7"},I={class:"row items-center justify-end q-gutter-sm"},A={key:1},G={key:2,class:"badge"},L={key:0};function J(e,t,l,s,a,o){return d(),u("div",j,[c("table",R,[c("tbody",null,[c("tr",null,[c("th",B,_(l.monthName)+" "+_(l.selectedYear),1)]),c("tr",null,[(d(!0),u(p,null,g(a.weekDays,i=>(d(),u("th",{key:i},_(i),1))),128))]),(d(!0),u(p,null,g(a.calendar,i=>(d(),u("tr",{key:i[0]},[(d(!0),u(p,null,g(i,n=>(d(),u("td",{key:n.date,class:q({"other-month":n.otherMonth,marked:o.isSelected(n.date).result&&!n.otherMonth})},[o.isSelected(n.date).result&&!n.otherMonth?(d(),w(v,{key:0,round:"",color:"primary"},{default:h(()=>[O(_(n.date.getDate())+" ",1),m(Y,{cover:"","transition-show":"scale","transition-hide":"scale"},{default:h(()=>[m(V,{modelValue:a.formData[`${o.isSelected(n.date).label}`],"onUpdate:modelValue":[r=>a.formData[`${o.isSelected(n.date).label}`]=r,r=>o.setSelectedDateValue(`${o.isSelected(n.date).label}`)]},{default:h(()=>[c("div",I,[y(m(v,{label:"Cancel",color:"primary",flat:""},null,512),[[C]]),y(m(v,{label:"OK",color:"primary",flat:""},null,512),[[C]])])]),_:2},1032,["modelValue","onUpdate:modelValue"])]),_:2},1024)]),_:2},1024)):(d(),u("div",A,_(n.date.getDate())+" ",1)),o.isSelected(n.date).result&&!n.otherMonth?(d(),u("div",G,_(o.isSelected(n.date).label),1)):M("",!0)],2))),128))]))),128)),a.calendar.length==5?(d(),u("tr",L,[(d(!0),u(p,null,g(a.weekDays,i=>(d(),u("td",{key:i}))),128))])):M("",!0)])])])}var z=b(N,[["render",J]]);const H={props:{name:{type:String,default:"Select Date"},date:{type:String,default:""},label:{type:String,default:"Select Date"},rules:{type:Array}},data(){return{displayDate:"",showDatePicker:!1}},mounted(){this.updateDisplayDate(this.selectedDate)},created(){this.selectedDate=this.date},methods:{updateDisplayDate(e){const t={name:this.name,date:e};console.log("Selected date:",t),this.displayDate=E.formatDate(e,"MMM D, YYYY"),this.$emit("update:date",t)}}},K={class:"row items-center justify-end"};function W(e,t,l,s,a,o){return d(),u("div",null,[m(U,{modelValue:a.displayDate,"onUpdate:modelValue":t[3]||(t[3]=i=>a.displayDate=i),label:l.label,onClick:t[4]||(t[4]=i=>a.showDatePicker=!0),readonly:"",outlined:"",rules:l.rules},{append:h(()=>[m(T,{name:"event",class:"cursor-pointer",onClick:t[2]||(t[2]=x(i=>a.showDatePicker=!0,["stop"]))},{default:h(()=>[m(Y,{modelValue:a.showDatePicker,"onUpdate:modelValue":t[1]||(t[1]=i=>a.showDatePicker=i),"transition-show":"scale","transition-hide":"scale"},{default:h(()=>[m(V,{modelValue:e.selectedDate,"onUpdate:modelValue":[t[0]||(t[0]=i=>e.selectedDate=i),o.updateDisplayDate],mask:"YYYY-MM-DD","emit-value":""},{default:h(()=>[c("div",K,[y(m(v,{label:"Close",color:"primary",flat:""},null,512),[[C]])])]),_:1},8,["modelValue","onUpdate:modelValue"])]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["modelValue","label","rules"])])}var X=b(H,[["render",W]]);const Z={components:{MonthView:z,DatePicker:X},data(){return{selectedDates:{Start:new Date(2025,0,2),Submission:new Date(2025,0,5),Review:new Date(2025,0,10),Selection:new Date(2025,0,15),End:new Date(2025,0,31)},formData:{title:"",date_from:"",submission_date:"",review_date:"",selection_date:"",date_to:""},rules:{required:e=>!!e||"This field is required",date_from:e=>this.validateDateFrom(),date_to:e=>this.validateDateTo(),submission_date:e=>this.validateSubmisionDate(),review_date:e=>this.validateReviewDate(),selection_date:e=>this.validateSelectionDate()},formError:{title:"",date_from:"",submission_date:"",review_date:"",selection_date:"",date_to:""},calendarMonths:[],markedDates:[new Date(2025,0,5),new Date(2025,0,15)]}},created(){this.getCall()},computed:{dateData(){return[{name:"date_from",label:"Start Date",value:this.formData.date_from},{name:"submission_date",label:"Submission Date",value:this.formData.submission_date},{name:"review_date",label:"Review Date",value:this.formData.review_date},{name:"selection_date",label:"Selection Date",value:this.formData.selection_date},{name:"date_to",label:"End Date",value:this.formData.date_to}]}},methods:{onDateChanged(e){this.formData[e.name]=e.date,this.validateDates(),this.$refs.myForm.validate().then(t=>{t?(console.log("Form is valid"),this.updateCall()):console.log("Form is invalid")})},getCall(){this.$api.get(`calls/${this.$route.params.call_id}/`).then(e=>{e.status==200&&(this.call=e.data,this.formData=e.data,this.formData.date_range={from:this.formData.date_from,to:this.formData.date_to},this.validateDates(),this.formData={title:this.call.title,date_from:this.call.date_from,submission_date:this.call.submission_date,review_date:this.call.review_date,selection_date:this.call.selection_date,date_to:this.call.date_to})})},validateDates(){this.$refs.myForm.validate(),this.selectedDates={Start:new Date(this.formData.date_from)||null,Submission:new Date(this.formData.submission_date)||null,Review:new Date(this.formData.review_date)||null,Selection:new Date(this.formData.selection_date)||null,End:new Date(this.formData.date_to)||null},this.generateCalendar()},generateCalendar(){if(!this.formData.date_from||!this.formData.date_to){this.calendarMonths=[];return}const e=new Date(this.formData.date_from),t=new Date(this.formData.date_to),l=[];for(let s=new Date(e.getFullYear(),e.getMonth(),1);s<=t;s.setMonth(s.getMonth()+1)){const a=new Date(s.getFullYear(),s.getMonth()+1,0).getDate(),o=[];for(let i=1;i<=a;i++){const n=new Date(s.getFullYear(),s.getMonth(),i);let r=null;this.formData.submission_date&&n.toISOString().split("T")[0]===this.formData.submission_date?r="Submission":this.formData.review_date&&n.toISOString().split("T")[0]===this.formData.review_date?r="Review":this.formData.selection_date&&n.toISOString().split("T")[0]===this.formData.selection_date&&(r="Selection"),o.push({date:i,event:r})}l.push({name:s.toLocaleString("default",{month:"long"}),month:s.getMonth(),year:s.getFullYear(),days:o})}this.calendarMonths=l},updateSelectedDates(e){this.selectedDates=e,this.formData.date_from=f(e.Start,"-"),this.formData.submission_date=f(e.Submission,"-"),this.formData.review_date=f(e.Review,"-"),this.formData.selection_date=f(e.Selection,"-"),this.formData.date_to=f(e.End,"-"),console.log("final formdata",this.formData),this.generateCalendar()},updateCall(){this.$api.put(`calls/${this.$route.params.call_id}/`,this.formData).then(e=>{e.status==200&&(this.call=e.data,this.$utilsStore.setLoading(!1))})},validateDateFrom(){const{date_from:e,date_to:t}=this.formData;if(!e)return"Start date is required";if(e>=t)return"Start date must be less than end date"},validateSubmisionDate(){const{date_from:e,date_to:t,submission_date:l,review_date:s,selection_date:a}=this.formData;if(!l)return"Submission date is required";if(l>s)return"Submission date must be less than review date";if(l>a)return"Submission date must be less than selection date";if(l<=e||l>=t)return"Out of range"},validateReviewDate(){const{date_from:e,date_to:t,submission_date:l,review_date:s,selection_date:a}=this.formData;if(!s)return"Review date is required";if(s<=e||s<=l||s>=a||s>=t)return"Out of range";if(s>a)return"Submission date must be less than review date"},validateSelectionDate(){const{date_from:e,date_to:t,submission_date:l,review_date:s,selection_date:a}=this.formData;if(!a)return"Selection date is required";if(a<=e||a<=s||a<=l||a>=t)return"Out of range"},validateDateTo(){const{date_from:e,date_to:t,submission_date:l,review_date:s,selection_date:a}=this.formData;if(!t)return"End date is required";if(t<=e)return"End date must be greater than start date";if(t<=l||t<=s||t<=a)return"End date must be greater than submission, review, and selection dates"}}},ee={class:"row q-gutter-sm justify-center"},te={class:"row q-mt-sm q-gutter-sm justify-center"};function ae(e,t,l,s,a,o){const i=k("DatePicker"),n=k("MonthView");return d(),u("div",null,[m(P,{ref:"myForm",class:"q-gutter-md"},{default:h(()=>[c("div",ee,[(d(!0),u(p,null,g(o.dateData,r=>(d(),w(i,{key:r.value,rules:[a.rules[r.name]],name:r.name,label:r.label,date:r.value,"onUpdate:date":t[0]||(t[0]=D=>o.onDateChanged(D))},null,8,["rules","name","label","date"]))),128))])]),_:1},512),m($,{spaced:""}),c("div",te,[(d(!0),u(p,null,g(a.calendarMonths,r=>(d(),w(n,{key:r.name,selectedYear:r.year,selectedMonth:r.month,monthName:r.name,markedDates:a.markedDates,selectedDates:a.selectedDates,"onUpdate:selectedDates":t[1]||(t[1]=D=>o.updateSelectedDates(D))},null,8,["selectedYear","selectedMonth","monthName","markedDates","selectedDates"]))),128))])])}var se=b(Z,[["render",ae]]);const le={name:"UpdateCall",components:{CalendarGrid2:se},data(){return{loading:!1,showDialog:!1,call:null}},computed:{},created(){this.getCall()},methods:{getCall(){this.$api.get(`calls/${this.$route.params.call_id}/`).then(e=>{e.status==200&&(this.call=e.data)})}},watch:{showPopup(e,t){this.showDialog=e},showDialog(e,t){this.$emit("showPopupChanged",e)}}},re={class:"q-my-md"};function oe(e,t,l,s,a,o){const i=k("CalendarGrid2");return a.call?(d(),w(Q,{key:0,padding:""},{default:h(()=>[c("div",re,[m(F,null,{default:h(()=>[m(S,{icon:"home",to:"/",label:"Home"}),m(S,{label:"Calls",to:"/calls",icon:"campaign"}),m(S,{label:a.call.title,icon:"campaign"},null,8,["label"])]),_:1})]),m(i)]),_:1})):M("",!0)}var Fe=b(le,[["render",oe]]);export{Fe as default};
