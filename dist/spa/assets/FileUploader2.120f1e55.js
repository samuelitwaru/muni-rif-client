import{_ as k,o as r,j as f,f as l,l as u,w as s,i as d,h as m,F as h,k as y,e as b,t as c,x as U}from"./index.3671a223.js";import{Q as n}from"./QCardSection.54f69d89.js";import{Q as g}from"./QSeparator.f4e84234.js";import{Q as F}from"./QItemLabel.8f35a27f.js";import{Q as v,a as Q}from"./QItem.41d22b85.js";import{Q as x}from"./QList.ae152641.js";import{Q as V}from"./QUploader.c38a58bd.js";import{Q as w}from"./QChip.05b39f31.js";import{Q as D}from"./QCard.78b7c44d.js";import{Q as B}from"./QDialog.8d8d8cb6.js";const C={name:"FileUploader",props:["uploadUrl","multiple","formData"],data(){return{modalVisible:!1,uploadHeaders:{},filesToUpload:[],uploadedFiles:[]}},methods:{onFileAdded(a){console.log("file added",a),a.forEach(e=>{this.uploadFile(e)}),this.filesToUpload=[...this.filesToUpload,...a]},onBrowse(a){var e=Array.from(a.target.files);console.log("file added",e),this.onFileAdded(e)},uploadFile(a){console.log(">>>>",a);const e=new FormData;e.append("file",a),console.log("just added file >> form data",e);for(const t in this.formData)this.formData.hasOwnProperty(t)&&e.append(t,this.formData[t]);this.$api.post(this.uploadUrl,e,{headers:this.uploadHeaders}).then(t=>{this.uploadedFiles.push(a),this.filesToUpload=this.filesToUpload.filter(_=>_.key!=a.key),this.uploadedFiles=[],this.modalVisible=!1,this.$emit("file-uploaded")}).catch(t=>{this.uploadedFiles=[],this.modalVisible=!1,this.$q.notify({type:"negative",message:"Failed to read file. Check your file and try again"}),console.log(t)})}}},T=d("div",{class:"text-h6"},"File Upload",-1),q=d("div",{class:"text-center q-my-auto q-py-lg",style:{"background-color":"#ffffff",color:"#000000"}}," Drag and drop files here ",-1),A={class:"text-center",style:{"background-color":"#ffffff",color:"#000000"}},L=d("br",null,null,-1),S=d("br",null,null,-1),j=["multiple"],I=d("label",{for:"files",class:"button-label"}," Browse ",-1);function N(a,e,t,_,i,p){return r(),f("div",null,[l(u,{color:"primary",icon:"upload",label:"Upload",dense:"",flat:"",onClick:e[0]||(e[0]=o=>i.modalVisible=!0)}),l(B,{modelValue:i.modalVisible,"onUpdate:modelValue":e[4]||(e[4]=o=>i.modalVisible=o)},{default:s(()=>[l(D,{style:{"min-width":"400px"}},{default:s(()=>[l(n,{class:"q-pa-sm text-center flex justify-between"},{default:s(()=>[T,l(u,{color:"primary",icon:"close",flat:"",onClick:e[1]||(e[1]=o=>{i.uploadedFiles=[],i.modalVisible=!1})})]),_:1}),l(g,{spaced:""}),l(n,{class:"q-pa-sm"},{default:s(()=>[d("div",null,[l(V,{url:t.uploadUrl,multiple:t.multiple,onAdded:p.onFileAdded,style:{width:"100%"}},{header:s(()=>[q,d("div",A,[m(" or "),L,S,d("input",{onChange:e[2]||(e[2]=(...o)=>p.onBrowse&&p.onBrowse(...o)),type:"file",id:"files",class:"hidden",multiple:t.multiple},null,40,j),I])]),list:s(()=>[l(x,{separator:""},{default:s(()=>[(r(!0),f(h,null,y(i.filesToUpload,o=>(r(),b(v,{key:o.__key},{default:s(()=>[l(Q,null,{default:s(()=>[l(F,{class:"full-width ellipsis"},{default:s(()=>[m(c(o.name),1)]),_:2},1024),l(F,{caption:""},{default:s(()=>[m(c(o.__sizeLabel)+" / "+c(o.__progressLabel),1)]),_:2},1024)]),_:2},1024),l(Q,{top:"",side:""},{default:s(()=>[l(U,{size:"20px",color:"primary"})]),_:1})]),_:2},1024))),128))]),_:1})]),_:1},8,["url","multiple","onAdded"])])]),_:1}),l(n,{class:"q-pa-sm"},{default:s(()=>[(r(!0),f(h,null,y(i.uploadedFiles,o=>(r(),b(w,{dense:"",key:o.__key,class:"glossy",icon:"check",label:o.name},null,8,["label"]))),128))]),_:1}),l(g,{spaced:""}),l(n,{align:"right"},{default:s(()=>[l(u,{color:"primary",label:"Done",onClick:e[3]||(e[3]=o=>{i.uploadedFiles=[],i.modalVisible=!1})})]),_:1})]),_:1})]),_:1},8,["modelValue"])])}var W=k(C,[["render",N]]);export{W as F};
